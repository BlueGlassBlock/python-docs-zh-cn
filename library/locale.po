# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 稀饭~~ <wangwhai@qq.com>, 2020
# Zombie110year <zombie110year@gmail.com>, 2020
# ppcfish <ppcfish@gmail.com>, 2020
# 钢 彭 <szhairui@gmail.com>, 2020
# Dai Xu <daixu61@hotmail.com>, 2021
# Freesand Leo <yuqinju@163.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-01 16:06+0000\n"
"PO-Revision-Date: 2020-05-30 12:05+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/locale.rst:2
msgid ":mod:`locale` --- Internationalization services"
msgstr ":mod:`locale` --- 国际化服务"

#: ../../library/locale.rst:10
msgid "**Source code:** :source:`Lib/locale.py`"
msgstr "**源代码：** :source:`Lib/locale.py`"

#: ../../library/locale.rst:14
msgid ""
"The :mod:`locale` module opens access to the POSIX locale database and "
"functionality. The POSIX locale mechanism allows programmers to deal with "
"certain cultural issues in an application, without requiring the programmer "
"to know all the specifics of each country where the software is executed."
msgstr ""
":mod:`locale` 模块开通了 POSIX 本地化数据库和功能的访问。POSIX "
"本地化机制让程序员能够为应用程序处理某些本地化的问题，而不需要去了解运行软件的每个国家的全部文化特点。"

#: ../../library/locale.rst:21
msgid ""
"The :mod:`locale` module is implemented on top of the :mod:`_locale` module,"
" which in turn uses an ANSI C locale implementation if available."
msgstr ""
":mod:`locale` 模块是在 :mod:`_locale` 模块的基础上实现的，而 _locale 则又用到了 ANSI C "
"语言实现的本地化功能。"

#: ../../library/locale.rst:24
msgid ""
"The :mod:`locale` module defines the following exception and functions:"
msgstr ":mod:`locale` 模块定义了以下异常和函数："

#: ../../library/locale.rst:29
msgid ""
"Exception raised when the locale passed to :func:`setlocale` is not "
"recognized."
msgstr "当传给 :func:`setlocale` 的 locale 无法识别时，会触发异常。"

#: ../../library/locale.rst:35
msgid ""
"If *locale* is given and not ``None``, :func:`setlocale` modifies the locale"
" setting for the *category*. The available categories are listed in the data"
" description below. *locale* may be a string, or an iterable of two strings "
"(language code and encoding). If it's an iterable, it's converted to a "
"locale name using the locale aliasing engine. An empty string specifies the "
"user's default settings. If the modification of the locale fails, the "
"exception :exc:`Error` is raised. If successful, the new locale setting is "
"returned."
msgstr ""
"如果给定了 *locale* 而不是 ``None``，:func:`setlocale` 会修改 *category* 的 locale "
"设置。可用的类别会在下面的数据描述中列出。*locale* "
"可以是一个字符串，也可以是两个字符串（语言代码和编码）组成的可迭代对象。若为可迭代对象，则会用地区别名引擎转换为一个地区名称。若为空字符串则指明采用用户的默认设置。如果"
" locale 设置修改失败，会触发 :exc:`Error` 异常。如果成功则返回新的 locale 设置。"

#: ../../library/locale.rst:43
msgid ""
"If *locale* is omitted or ``None``, the current setting for *category* is "
"returned."
msgstr "如果省略 *locale* 或为 ``None``，将返回 *category* 但当前设置。"

#: ../../library/locale.rst:46
msgid ""
":func:`setlocale` is not thread-safe on most systems. Applications typically"
" start with a call of ::"
msgstr ""

#: ../../library/locale.rst:52
msgid ""
"This sets the locale for all categories to the user's default setting "
"(typically specified in the :envvar:`LANG` environment variable).  If the "
"locale is not changed thereafter, using multithreading should not cause "
"problems."
msgstr ""
"这会把所有类别的 locale 都设为用户的默认设置（通常在 :envvar:`LANG` 环境变量中指定）。如果后续 locale "
"没有改动，则使用多线程应该不会产生问题。"

#: ../../library/locale.rst:59
msgid ""
"Returns the database of the local conventions as a dictionary. This "
"dictionary has the following strings as keys:"
msgstr "以字典的形式返回本地约定的数据库。此字典具有以下字符串作为键："

#: ../../library/locale.rst:65
msgid "Category"
msgstr "类别"

#: ../../library/locale.rst:65
msgid "Key"
msgstr "键"

#: ../../library/locale.rst:65
msgid "Meaning"
msgstr "含义"

#: ../../library/locale.rst:67
msgid ":const:`LC_NUMERIC`"
msgstr ":const:`LC_NUMERIC`"

#: ../../library/locale.rst:67
msgid "``'decimal_point'``"
msgstr "``'decimal_point'``"

#: ../../library/locale.rst:67
msgid "Decimal point character."
msgstr "小数点字符。"

#: ../../library/locale.rst:69
msgid "``'grouping'``"
msgstr "``'grouping'``"

#: ../../library/locale.rst:69
msgid ""
"Sequence of numbers specifying which relative positions the "
"``'thousands_sep'`` is expected.  If the sequence is terminated with "
":const:`CHAR_MAX`, no further grouping is performed. If the sequence "
"terminates with a ``0``,  the last group size is repeatedly used."
msgstr ""
"数字列表，指定 ``'thousands_sep'`` 应该出现的位置。 如果列表以 :const:`CHAR_MAX` 结束，则不会作分组。如果列表以"
" ``0`` 结束，则重复使用最后的分组大小。"

#: ../../library/locale.rst:80
msgid "``'thousands_sep'``"
msgstr "``'thousands_sep'``"

#: ../../library/locale.rst:80
msgid "Character used between groups."
msgstr "组之间使用的字符。"

#: ../../library/locale.rst:82
msgid ":const:`LC_MONETARY`"
msgstr ":const:`LC_MONETARY`"

#: ../../library/locale.rst:82
msgid "``'int_curr_symbol'``"
msgstr "``'int_curr_symbol'``"

#: ../../library/locale.rst:82
msgid "International currency symbol."
msgstr "国际货币符号。"

#: ../../library/locale.rst:84
msgid "``'currency_symbol'``"
msgstr "``'currency_symbol'``"

#: ../../library/locale.rst:84
msgid "Local currency symbol."
msgstr "当地货币符号。"

#: ../../library/locale.rst:86
msgid "``'p_cs_precedes/n_cs_precedes'``"
msgstr "``'p_cs_precedes/n_cs_precedes'``"

#: ../../library/locale.rst:86
msgid ""
"Whether the currency symbol precedes the value (for positive resp. negative "
"values)."
msgstr "货币符号是否在值之前（对于正值或负值）。"

#: ../../library/locale.rst:91
msgid "``'p_sep_by_space/n_sep_by_space'``"
msgstr "``'p_sep_by_space/n_sep_by_space'``"

#: ../../library/locale.rst:91
msgid ""
"Whether the currency symbol is separated from the value  by a space (for "
"positive resp. negative values)."
msgstr "货币符号是否通过空格与值分隔（对于正值或负值）。"

#: ../../library/locale.rst:96
msgid "``'mon_decimal_point'``"
msgstr "``'mon_decimal_point'``"

#: ../../library/locale.rst:96
msgid "Decimal point used for monetary values."
msgstr "用于货币金额的小数点。"

#: ../../library/locale.rst:99
msgid "``'frac_digits'``"
msgstr "``'frac_digits'``"

#: ../../library/locale.rst:99
msgid ""
"Number of fractional digits used in local formatting of monetary values."
msgstr "货币值的本地格式中使用的小数位数。"

#: ../../library/locale.rst:103
msgid "``'int_frac_digits'``"
msgstr "``'int_frac_digits'``"

#: ../../library/locale.rst:103
msgid ""
"Number of fractional digits used in international formatting of monetary "
"values."
msgstr "货币价值的国际格式中使用的小数位数。"

#: ../../library/locale.rst:107
msgid "``'mon_thousands_sep'``"
msgstr "``'mon_thousands_sep'``"

#: ../../library/locale.rst:107
msgid "Group separator used for monetary values."
msgstr "用于货币值的组分隔符。"

#: ../../library/locale.rst:110
msgid "``'mon_grouping'``"
msgstr "``'mon_grouping'``"

#: ../../library/locale.rst:110
msgid "Equivalent to ``'grouping'``, used for monetary values."
msgstr "相当于 ``'grouping'`` ，用于货币价值。"

#: ../../library/locale.rst:113
msgid "``'positive_sign'``"
msgstr "``'positive_sign'``"

#: ../../library/locale.rst:113
msgid "Symbol used to annotate a positive monetary value."
msgstr "用于标注正货币价值的符号。"

#: ../../library/locale.rst:116
msgid "``'negative_sign'``"
msgstr "``'negative_sign'``"

#: ../../library/locale.rst:116
msgid "Symbol used to annotate a negative monetary value."
msgstr "用于注释负货币价值的符号。"

#: ../../library/locale.rst:119
msgid "``'p_sign_posn/n_sign_posn'``"
msgstr "``'p_sign_posn/n_sign_posn'``"

#: ../../library/locale.rst:119
msgid ""
"The position of the sign (for positive resp. negative values), see below."
msgstr "符号的位置（对于正值或负值），见下文。"

#: ../../library/locale.rst:124
msgid ""
"All numeric values can be set to :const:`CHAR_MAX` to indicate that there is"
" no value specified in this locale."
msgstr "可以将所有数值设置为 :const:`CHAR_MAX` ，以指示此语言环境中未指定任何值。"

#: ../../library/locale.rst:127
msgid ""
"The possible values for ``'p_sign_posn'`` and ``'n_sign_posn'`` are given "
"below."
msgstr "下面给出了 ``'p_sign_posn'`` 和 ``'n_sign_posn'`` 的可能值。"

#: ../../library/locale.rst:130
msgid "Value"
msgstr "值"

#: ../../library/locale.rst:130
msgid "Explanation"
msgstr "说明"

#: ../../library/locale.rst:132
msgid "``0``"
msgstr "``0``"

#: ../../library/locale.rst:132
msgid "Currency and value are surrounded by parentheses."
msgstr "被括号括起来的货币和金额。"

#: ../../library/locale.rst:135
msgid "``1``"
msgstr "``1``"

#: ../../library/locale.rst:135
msgid "The sign should precede the value and currency symbol."
msgstr "该标志应位于值和货币符号之前。"

#: ../../library/locale.rst:138
msgid "``2``"
msgstr "``2``"

#: ../../library/locale.rst:138
msgid "The sign should follow the value and currency symbol."
msgstr "该标志应位于值和货币符号之后。"

#: ../../library/locale.rst:141
msgid "``3``"
msgstr "``3``"

#: ../../library/locale.rst:141
msgid "The sign should immediately precede the value."
msgstr "标志应该紧跟在值之前。"

#: ../../library/locale.rst:144
msgid "``4``"
msgstr "``4``"

#: ../../library/locale.rst:144
msgid "The sign should immediately follow the value."
msgstr "标志应该紧跟值项。"

#: ../../library/locale.rst:147
msgid "``CHAR_MAX``"
msgstr "``CHAR_MAX``"

#: ../../library/locale.rst:147
msgid "Nothing is specified in this locale."
msgstr "此语言环境中未指定任何内容。"

#: ../../library/locale.rst:150
msgid ""
"The function sets temporarily the ``LC_CTYPE`` locale to the ``LC_NUMERIC`` "
"locale or the ``LC_MONETARY`` locale if locales are different and numeric or"
" monetary strings are non-ASCII. This temporary change affects other "
"threads."
msgstr ""
"该函数将 ``LC_CTYPE`` 地区设为 ``LC_NUMERIC`` 地区，若地区不同且数字或货币字符为非 ASCII，则设置为 "
"``LC_MONETARY`` 地区。这个临时的改变会影响到其他线程。"

#: ../../library/locale.rst:154
msgid ""
"The function now sets temporarily the ``LC_CTYPE`` locale to the "
"``LC_NUMERIC`` locale in some cases."
msgstr "现在在某些情况下，该函数会将 ``LC_CTYPE`` 地区设为 ``LC_NUMERIC`` 地区。"

#: ../../library/locale.rst:161
msgid ""
"Return some locale-specific information as a string.  This function is not "
"available on all systems, and the set of possible options might also vary "
"across platforms.  The possible argument values are numbers, for which "
"symbolic constants are available in the locale module."
msgstr ""
"以字符串形式返回一些地区相关的信息。本函数并非在所有系统都可用，而且可用的 option 在不同平台上也可能不同。可填的参数值为数值，在 locale "
"模块中提供了对应的符号常量。"

#: ../../library/locale.rst:166
msgid ""
"The :func:`nl_langinfo` function accepts one of the following keys.  Most "
"descriptions are taken from the corresponding description in the GNU C "
"library."
msgstr ":func:`nl_langinfo` 函数可接受以下值。大部分含义都取自 GNU C 库。"

#: ../../library/locale.rst:172
msgid ""
"Get a string with the name of the character encoding used in the selected "
"locale."
msgstr "获取一个字符串，代表所选地区采用的字符编码名称。"

#: ../../library/locale.rst:177
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent date and time in a locale-specific way."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以地区特定格式表示日期和时间。"

#: ../../library/locale.rst:182
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent a date in a locale-specific way."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以地区特定格式表示日期。"

#: ../../library/locale.rst:187
msgid ""
"Get a string that can be used as a format string for :func:`time.strftime` "
"to represent a time in a locale-specific way."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以地区特定格式表示时间。"

#: ../../library/locale.rst:192
msgid ""
"Get a format string for :func:`time.strftime` to represent time in the am/pm"
" format."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以 am/pm 的格式表示时间。"

#: ../../library/locale.rst:197
msgid "Get the name of the n-th day of the week."
msgstr "获取一周中第 n 天的名称。"

#: ../../library/locale.rst:201
msgid ""
"This follows the US convention of :const:`DAY_1` being Sunday, not the "
"international convention (ISO 8601) that Monday is the first day of the "
"week."
msgstr "这里遵循美国惯例，即 :const:`DAY_1` 是星期天，而不是国际惯例（ISO 8601），即星期一是一周的第一天。"

#: ../../library/locale.rst:207
msgid "Get the abbreviated name of the n-th day of the week."
msgstr "获取一周中第 n 天的缩写名称。"

#: ../../library/locale.rst:211
msgid "Get the name of the n-th month."
msgstr "获取第 n 个月的名称。"

#: ../../library/locale.rst:215
msgid "Get the abbreviated name of the n-th month."
msgstr "获取第 n 个月的缩写名称。"

#: ../../library/locale.rst:219
msgid "Get the radix character (decimal dot, decimal comma, etc.)."
msgstr "获取小数点字符（小数点、小数逗号等）。"

#: ../../library/locale.rst:223
msgid "Get the separator character for thousands (groups of three digits)."
msgstr "获取千位数（三位数一组）的分隔符。"

#: ../../library/locale.rst:227
msgid ""
"Get a regular expression that can be used with the regex function to "
"recognize a positive response to a yes/no question."
msgstr "获取一个可供 regex 函数使用的正则表达式，用于识别需要回答是或否的问题的肯定回答。"

#: ../../library/locale.rst:232
msgid ""
"The expression is in the syntax suitable for the :c:func:`regex` function "
"from the C library, which might differ from the syntax used in :mod:`re`."
msgstr "该表达式的语法适用于 C 库的 :c:func:`regex` 函数，可能与 :mod:`re` 中的语法不一样。"

#: ../../library/locale.rst:237
msgid ""
"Get a regular expression that can be used with the regex(3) function to "
"recognize a negative response to a yes/no question."
msgstr "获取一个可供 regex(3) 函数使用的正则表达式，用于识别需要回答是或否的问题的否定回答。"

#: ../../library/locale.rst:242
msgid ""
"Get the currency symbol, preceded by \"-\" if the symbol should appear "
"before the value, \"+\" if the symbol should appear after the value, or "
"\".\" if the symbol should replace the radix character."
msgstr ""
"获取货币符号，如果符号应位于数字之前，则在其前面加上“-”；如果符号应位于数字之后，则前面加“+”；如果符号应取代小数点字符，则前面加“.”。"

#: ../../library/locale.rst:248
msgid "Get a string that represents the era used in the current locale."
msgstr "获取一个字符串，代表当前地区使用的纪元。"

#: ../../library/locale.rst:250
msgid ""
"Most locales do not define this value.  An example of a locale which does "
"define this value is the Japanese one.  In Japan, the traditional "
"representation of dates includes the name of the era corresponding to the "
"then-emperor's reign."
msgstr "大多数地区都没有定义该值。定义了该值的一个案例日本。日本传统的日期表示方法中，包含了当时天皇统治朝代的名称。"

#: ../../library/locale.rst:255
msgid ""
"Normally it should not be necessary to use this value directly. Specifying "
"the ``E`` modifier in their format strings causes the :func:`time.strftime` "
"function to use this information.  The format of the returned string is not "
"specified, and therefore you should not assume knowledge of it on different "
"systems."
msgstr ""
"通常没有必要直接使用该值。在格式串中指定 ``E`` 符号，会让  :func:`time.strftime` "
"函数启用此信息。返回字符串的格式并没有定义，因此不得假定各个系统都能理解。"

#: ../../library/locale.rst:263
msgid ""
"Get a format string for :func:`time.strftime` to represent date and time in "
"a locale-specific era-based way."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以地区特定格式表示带纪元的日期和时间。"

#: ../../library/locale.rst:268
msgid ""
"Get a format string for :func:`time.strftime` to represent a date in a "
"locale-specific era-based way."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以地区特定格式表示带纪元的日期。"

#: ../../library/locale.rst:273
msgid ""
"Get a format string for :func:`time.strftime` to represent a time in a "
"locale-specific era-based way."
msgstr "获取一个字符串，可用作 :func:`time.strftime` 的格式串，以便以地区特定格式表示带纪元的时间。"

#: ../../library/locale.rst:278
msgid ""
"Get a representation of up to 100 values used to represent the values 0 to "
"99."
msgstr "获取 0 到 99 的表示法，最多不超过 100 个值。"

#: ../../library/locale.rst:284
msgid ""
"Tries to determine the default locale settings and returns them as a tuple "
"of the form ``(language code, encoding)``."
msgstr "尝试确定默认的地区设置，并以 ``(language code, encoding)`` 元组的形式返回。"

#: ../../library/locale.rst:287
msgid ""
"According to POSIX, a program which has not called ``setlocale(LC_ALL, '')``"
" runs using the portable ``'C'`` locale.  Calling ``setlocale(LC_ALL, '')`` "
"lets it use the default locale as defined by the :envvar:`LANG` variable.  "
"Since we do not want to interfere with the current locale setting we thus "
"emulate the behavior in the way described above."
msgstr ""
"根据 POSIX 的规范，未调用 ``setlocale(LC_ALL, '')`` 的程序采用可移植的 ``'C'`` 区域设置运行。 调用 "
"``setlocale(LC_ALL, '')`` 则可采用 :envvar:`LANG` 变量定义的默认区域。 "
"由于不想干扰当前的区域设置，因此就以上述方式进行了模拟。"

#: ../../library/locale.rst:293
msgid ""
"To maintain compatibility with other platforms, not only the :envvar:`LANG` "
"variable is tested, but a list of variables given as envvars parameter.  The"
" first found to be defined will be used.  *envvars* defaults to the search "
"path used in GNU gettext; it must always contain the variable name "
"``'LANG'``.  The GNU gettext search path contains ``'LC_ALL'``, "
"``'LC_CTYPE'``, ``'LANG'`` and ``'LANGUAGE'``, in that order."
msgstr ""

#: ../../library/locale.rst:300 ../../library/locale.rst:311
msgid ""
"Except for the code ``'C'``, the language code corresponds to :rfc:`1766`. "
"*language code* and *encoding* may be ``None`` if their values cannot be "
"determined."
msgstr ""

#: ../../library/locale.rst:307
msgid ""
"Returns the current setting for the given locale category as sequence "
"containing *language code*, *encoding*. *category* may be one of the "
":const:`LC_\\*` values except :const:`LC_ALL`.  It defaults to "
":const:`LC_CTYPE`."
msgstr ""

#: ../../library/locale.rst:318
msgid ""
"Return the encoding used for text data, according to user preferences.  User"
" preferences are expressed differently on different systems, and might not "
"be available programmatically on some systems, so this function only returns"
" a guess."
msgstr ""

#: ../../library/locale.rst:323
msgid ""
"On some systems, it is necessary to invoke :func:`setlocale` to obtain the "
"user preferences, so this function is not thread-safe. If invoking setlocale"
" is not necessary or desired, *do_setlocale* should be set to ``False``."
msgstr ""

#: ../../library/locale.rst:327
msgid ""
"On Android or in the UTF-8 mode (:option:`-X` ``utf8`` option), always "
"return ``'UTF-8'``, the locale and the *do_setlocale* argument are ignored."
msgstr ""

#: ../../library/locale.rst:330
msgid ""
"The function now always returns ``UTF-8`` on Android or if the UTF-8 mode is"
" enabled."
msgstr ""

#: ../../library/locale.rst:337
msgid ""
"Returns a normalized locale code for the given locale name.  The returned "
"locale code is formatted for use with :func:`setlocale`.  If normalization "
"fails, the original name is returned unchanged."
msgstr ""

#: ../../library/locale.rst:341
msgid ""
"If the given encoding is not known, the function defaults to the default "
"encoding for the locale code just like :func:`setlocale`."
msgstr ""

#: ../../library/locale.rst:347
msgid "Sets the locale for *category* to the default setting."
msgstr ""

#: ../../library/locale.rst:349
msgid ""
"The default setting is determined by calling :func:`getdefaultlocale`. "
"*category* defaults to :const:`LC_ALL`."
msgstr ""

#: ../../library/locale.rst:355
msgid ""
"Compares two strings according to the current :const:`LC_COLLATE` setting. "
"As any other compare function, returns a negative, or a positive value, or "
"``0``, depending on whether *string1* collates before or after *string2* or "
"is equal to it."
msgstr ""

#: ../../library/locale.rst:363
msgid ""
"Transforms a string to one that can be used in locale-aware comparisons.  "
"For example, ``strxfrm(s1) < strxfrm(s2)`` is equivalent to ``strcoll(s1, "
"s2) < 0``.  This function can be used when the same string is compared "
"repeatedly, e.g. when collating a sequence of strings."
msgstr ""

#: ../../library/locale.rst:372
msgid ""
"Formats a number *val* according to the current :const:`LC_NUMERIC` setting."
" The format follows the conventions of the ``%`` operator.  For floating "
"point values, the decimal point is modified if appropriate.  If *grouping* "
"is true, also takes the grouping into account."
msgstr ""

#: ../../library/locale.rst:377
msgid ""
"If *monetary* is true, the conversion uses monetary thousands separator and "
"grouping strings."
msgstr ""

#: ../../library/locale.rst:380
msgid ""
"Processes formatting specifiers as in ``format % val``, but takes the "
"current locale settings into account."
msgstr ""

#: ../../library/locale.rst:383
msgid "The *monetary* keyword parameter was added."
msgstr ""

#: ../../library/locale.rst:389
msgid ""
"Please note that this function works like :meth:`format_string` but will "
"only work for exactly one ``%char`` specifier.  For example, ``'%f'`` and "
"``'%.0f'`` are both valid specifiers, but ``'%f KiB'`` is not."
msgstr ""

#: ../../library/locale.rst:393
msgid "For whole format strings, use :func:`format_string`."
msgstr ""

#: ../../library/locale.rst:395
msgid "Use :meth:`format_string` instead."
msgstr ""

#: ../../library/locale.rst:401
msgid ""
"Formats a number *val* according to the current :const:`LC_MONETARY` "
"settings."
msgstr ""

#: ../../library/locale.rst:403
msgid ""
"The returned string includes the currency symbol if *symbol* is true, which "
"is the default. If *grouping* is true (which is not the default), grouping "
"is done with the value. If *international* is true (which is not the "
"default), the international currency symbol is used."
msgstr ""

#: ../../library/locale.rst:408
msgid ""
"Note that this function will not work with the 'C' locale, so you have to "
"set a locale via :func:`setlocale` first."
msgstr ""

#: ../../library/locale.rst:414
msgid ""
"Formats a floating point number using the same format as the built-in "
"function ``str(float)``, but takes the decimal point into account."
msgstr ""

#: ../../library/locale.rst:420
msgid ""
"Converts a string into a normalized number string, following the "
":const:`LC_NUMERIC` settings."
msgstr ""

#: ../../library/locale.rst:428
msgid ""
"Converts a string to a floating point number, following the "
":const:`LC_NUMERIC` settings."
msgstr ""

#: ../../library/locale.rst:434
msgid ""
"Converts a string to an integer, following the :const:`LC_NUMERIC` "
"conventions."
msgstr ""

#: ../../library/locale.rst:441
msgid ""
"Locale category for the character type functions.  Depending on the settings"
" of this category, the functions of module :mod:`string` dealing with case "
"change their behaviour."
msgstr ""

#: ../../library/locale.rst:448
msgid ""
"Locale category for sorting strings.  The functions :func:`strcoll` and "
":func:`strxfrm` of the :mod:`locale` module are affected."
msgstr ""

#: ../../library/locale.rst:454
msgid ""
"Locale category for the formatting of time.  The function "
":func:`time.strftime` follows these conventions."
msgstr ""

#: ../../library/locale.rst:460
msgid ""
"Locale category for formatting of monetary values.  The available options "
"are available from the :func:`localeconv` function."
msgstr ""

#: ../../library/locale.rst:466
msgid ""
"Locale category for message display. Python currently does not support "
"application specific locale-aware messages.  Messages displayed by the "
"operating system, like those returned by :func:`os.strerror` might be "
"affected by this category."
msgstr ""

#: ../../library/locale.rst:474
msgid ""
"Locale category for formatting numbers.  The functions :func:`.format`, "
":func:`atoi`, :func:`atof` and :func:`.str` of the :mod:`locale` module are "
"affected by that category.  All other numeric formatting operations are not "
"affected."
msgstr ""

#: ../../library/locale.rst:482
msgid ""
"Combination of all locale settings.  If this flag is used when the locale is"
" changed, setting the locale for all categories is attempted. If that fails "
"for any category, no category is changed at all.  When the locale is "
"retrieved using this flag, a string indicating the setting for all "
"categories is returned. This string can be later used to restore the "
"settings."
msgstr ""

#: ../../library/locale.rst:491
msgid ""
"This is a symbolic constant used for different values returned by "
":func:`localeconv`."
msgstr ""

#: ../../library/locale.rst:495
msgid "Example::"
msgstr "示例::"

#: ../../library/locale.rst:508
msgid "Background, details, hints, tips and caveats"
msgstr ""

#: ../../library/locale.rst:510
msgid ""
"The C standard defines the locale as a program-wide property that may be "
"relatively expensive to change.  On top of that, some implementation are "
"broken in such a way that frequent locale changes may cause core dumps.  "
"This makes the locale somewhat painful to use correctly."
msgstr ""

#: ../../library/locale.rst:515
msgid ""
"Initially, when a program is started, the locale is the ``C`` locale, no "
"matter what the user's preferred locale is.  There is one exception: the "
":data:`LC_CTYPE` category is changed at startup to set the current locale "
"encoding to the user's preferred locale encoding. The program must "
"explicitly say that it wants the user's preferred locale settings for other "
"categories by calling ``setlocale(LC_ALL, '')``."
msgstr ""

#: ../../library/locale.rst:522
msgid ""
"It is generally a bad idea to call :func:`setlocale` in some library "
"routine, since as a side effect it affects the entire program.  Saving and "
"restoring it is almost as bad: it is expensive and affects other threads "
"that happen to run before the settings have been restored."
msgstr ""

#: ../../library/locale.rst:527
msgid ""
"If, when coding a module for general use, you need a locale independent "
"version of an operation that is affected by the locale (such as certain "
"formats used with :func:`time.strftime`), you will have to find a way to do "
"it without using the standard library routine.  Even better is convincing "
"yourself that using locale settings is okay.  Only as a last resort should "
"you document that your module is not compatible with non-\\ ``C`` locale "
"settings."
msgstr ""

#: ../../library/locale.rst:534
msgid ""
"The only way to perform numeric operations according to the locale is to use"
" the special functions defined by this module: :func:`atof`, :func:`atoi`, "
":func:`.format`, :func:`.str`."
msgstr ""

#: ../../library/locale.rst:538
msgid ""
"There is no way to perform case conversions and character classifications "
"according to the locale.  For (Unicode) text strings these are done "
"according to the character value only, while for byte strings, the "
"conversions and classifications are done according to the ASCII value of the"
" byte, and bytes whose high bit is set (i.e., non-ASCII bytes) are never "
"converted or considered part of a character class such as letter or "
"whitespace."
msgstr ""

#: ../../library/locale.rst:549
msgid "For extension writers and programs that embed Python"
msgstr ""

#: ../../library/locale.rst:551
msgid ""
"Extension modules should never call :func:`setlocale`, except to find out "
"what the current locale is.  But since the return value can only be used "
"portably to restore it, that is not very useful (except perhaps to find out "
"whether or not the locale is ``C``)."
msgstr ""

#: ../../library/locale.rst:556
msgid ""
"When Python code uses the :mod:`locale` module to change the locale, this "
"also affects the embedding application.  If the embedding application "
"doesn't want this to happen, it should remove the :mod:`_locale` extension "
"module (which does all the work) from the table of built-in modules in the "
":file:`config.c` file, and make sure that the :mod:`_locale` module is not "
"accessible as a shared library."
msgstr ""

#: ../../library/locale.rst:567
msgid "Access to message catalogs"
msgstr ""

#: ../../library/locale.rst:575
msgid ""
"The locale module exposes the C library's gettext interface on systems that "
"provide this interface.  It consists of the functions :func:`!gettext`, "
":func:`!dgettext`, :func:`!dcgettext`, :func:`!textdomain`, "
":func:`!bindtextdomain`, and :func:`!bind_textdomain_codeset`.  These are "
"similar to the same functions in the :mod:`gettext` module, but use the C "
"library's binary format for message catalogs, and the C library's search "
"algorithms for locating message catalogs."
msgstr ""

#: ../../library/locale.rst:582
msgid ""
"Python applications should normally find no need to invoke these functions, "
"and should use :mod:`gettext` instead.  A known exception to this rule are "
"applications that link with additional C libraries which internally invoke "
":c:func:`gettext` or :c:func:`dcgettext`.  For these applications, it may be"
" necessary to bind the text domain, so that the libraries can properly "
"locate their message catalogs."
msgstr ""
